/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Store, StoreInterface } from "../Store";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
    ],
    name: "setTitle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600a81526020017f4920616d2073746f7265000000000000000000000000000000000000000000008152506000908051906020019061004f929190610062565b5034801561005c57600080fd5b50610166565b82805461006e90610105565b90600052602060002090601f01602090048101928261009057600085556100d7565b82601f106100a957805160ff19168380011785556100d7565b828001600101855582156100d7579182015b828111156100d65782518255916020019190600101906100bb565b5b5090506100e491906100e8565b5090565b5b808211156101015760008160009055506001016100e9565b5090565b6000600282049050600182168061011d57607f821691505b6020821081141561013157610130610137565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61031f806101756000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806372910be014610030575b600080fd5b61004a60048036038101906100459190610171565b61004c565b005b8060009080519060200190610062929190610066565b5050565b82805461007290610217565b90600052602060002090601f01602090048101928261009457600085556100db565b82601f106100ad57805160ff19168380011785556100db565b828001600101855582156100db579182015b828111156100da5782518255916020019190600101906100bf565b5b5090506100e891906100ec565b5090565b5b808211156101055760008160009055506001016100ed565b5090565b600061011c610117846101d7565b6101b2565b90508281526020810184848401111561013457600080fd5b61013f848285610208565b509392505050565b600082601f83011261015857600080fd5b8135610168848260208601610109565b91505092915050565b60006020828403121561018357600080fd5b600082013567ffffffffffffffff81111561019d57600080fd5b6101a984828501610147565b91505092915050565b60006101bc6101cd565b90506101c88282610249565b919050565b6000604051905090565b600067ffffffffffffffff8211156101f2576101f16102a9565b5b6101fb826102d8565b9050602081019050919050565b82818337600083830152505050565b6000600282049050600182168061022f57607f821691505b602082108114156102435761024261027a565b5b50919050565b610252826102d8565b810181811067ffffffffffffffff82111715610271576102706102a9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea26469706673582212205fe10d4ebac87eda2796e392ae7e753fe2e6ca32b02b06269e1fa8e1bc84373c64736f6c63430008010033";

export class Store__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Store> {
    return super.deploy(overrides || {}) as Promise<Store>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Store {
    return super.attach(address) as Store;
  }
  connect(signer: Signer): Store__factory {
    return super.connect(signer) as Store__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StoreInterface {
    return new utils.Interface(_abi) as StoreInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Store {
    return new Contract(address, _abi, signerOrProvider) as Store;
  }
}
