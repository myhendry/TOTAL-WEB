/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccountFactory,
  AccountFactoryInterface,
} from "../AccountFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "contract Account",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "createAccount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061092d806100206000396000f3fe6080604052600436106100295760003560e01c80639859387b1461002e578063f2a40db81461004a575b600080fd5b6100486004803603810190610043919061043c565b610087565b005b34801561005657600080fd5b50610071600480360381019061006c919061048e565b6102ec565b60405161007e9190610529565b60405180910390f35b6000606f82604051610098906103f0565b6100a2919061050e565b6040518091039082f09050801580156100bf573d6000803e3d6000fd5b5090506101016040518060400160405280600581526020017f6f776e65720000000000000000000000000000000000000000000000000000008152508361032b565b60008173ffffffffffffffffffffffffffffffffffffffff166376cdb03b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561014957600080fd5b505afa15801561015d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101819190610465565b90506101c26040518060400160405280600481526020017f62616e6b000000000000000000000000000000000000000000000000000000008152508261032b565b60008273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561020a57600080fd5b505afa15801561021e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102429190610465565b90506102836040518060400160405280600581526020017f6f776e65720000000000000000000000000000000000000000000000000000008152508261032b565b6000839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600081815481106102fc57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103c38282604051602401610341929190610544565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103c7565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6102958061066383390190565b60008135905061040c81610634565b92915050565b60008151905061042181610634565b92915050565b6000813590506104368161064b565b92915050565b60006020828403121561044e57600080fd5b600061045c848285016103fd565b91505092915050565b60006020828403121561047757600080fd5b600061048584828501610412565b91505092915050565b6000602082840312156104a057600080fd5b60006104ae84828501610427565b91505092915050565b6104c081610590565b82525050565b6104cf816105cc565b82525050565b60006104e082610574565b6104ea818561057f565b93506104fa8185602086016105f0565b61050381610623565b840191505092915050565b600060208201905061052360008301846104b7565b92915050565b600060208201905061053e60008301846104c6565b92915050565b6000604082019050818103600083015261055e81856104d5565b905061056d60208301846104b7565b9392505050565b600081519050919050565b600082825260208201905092915050565b600061059b826105a2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105d7826105de565b9050919050565b60006105e9826105a2565b9050919050565b60005b8381101561060e5780820151818401526020810190506105f3565b8381111561061d576000848401525b50505050565b6000601f19601f8301169050919050565b61063d81610590565b811461064857600080fd5b50565b610654816105c2565b811461065f57600080fd5b5056fe6080604052604051610295380380610295833981810160405281019061002591906100c1565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610133565b6000815190506100bb8161011c565b92915050565b6000602082840312156100d357600080fd5b60006100e1848285016100ac565b91505092915050565b60006100f5826100fc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610125816100ea565b811461013057600080fd5b50565b610153806101426000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806376cdb03b1461003b5780638da5cb5b14610059575b600080fd5b610043610077565b60405161005091906100d0565b60405180910390f35b61006161009b565b60405161006e91906100d0565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ca816100eb565b82525050565b60006020820190506100e560008301846100c1565b92915050565b60006100f6826100fd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea264697066735822122012823fad52c121b40d189d05882f9588ed2a11afc6c6bb7050508f0e4d75039564736f6c63430008010033a2646970667358221220d2d36691792116fed7bf7e995c85689a55f6867ada5166b003199c65ccad6b6764736f6c63430008010033";

export class AccountFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccountFactory> {
    return super.deploy(overrides || {}) as Promise<AccountFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccountFactory {
    return super.attach(address) as AccountFactory;
  }
  connect(signer: Signer): AccountFactory__factory {
    return super.connect(signer) as AccountFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountFactoryInterface {
    return new utils.Interface(_abi) as AccountFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountFactory {
    return new Contract(address, _abi, signerOrProvider) as AccountFactory;
  }
}
