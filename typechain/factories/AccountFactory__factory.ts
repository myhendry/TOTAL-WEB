/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccountFactory,
  AccountFactoryInterface,
} from "../AccountFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "contract Account",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "createAccount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105c0806100206000396000f3fe6080604052600436106100295760003560e01c80639859387b1461002e578063f2a40db81461004a575b600080fd5b6100486004803603810190610043919061019f565b610087565b005b34801561005657600080fd5b50610071600480360381019061006c91906101c8565b610129565b60405161007e919061022a565b60405180910390f35b6000606f8260405161009890610168565b6100a2919061020f565b6040518091039082f09050801580156100bf573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000818154811061013957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102b7806102d483390190565b600081359050610184816102a5565b92915050565b600081359050610199816102bc565b92915050565b6000602082840312156101b157600080fd5b60006101bf84828501610175565b91505092915050565b6000602082840312156101da57600080fd5b60006101e88482850161018a565b91505092915050565b6101fa81610245565b82525050565b61020981610281565b82525050565b600060208201905061022460008301846101f1565b92915050565b600060208201905061023f6000830184610200565b92915050565b600061025082610257565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061028c82610293565b9050919050565b600061029e82610257565b9050919050565b6102ae81610245565b81146102b957600080fd5b50565b6102c581610277565b81146102d057600080fd5b5056fe60806040526040516102b73803806102b7833981810160405281019061002591906100e3565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610155565b6000815190506100dd8161013e565b92915050565b6000602082840312156100f557600080fd5b6000610103848285016100ce565b91505092915050565b60006101178261011e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101478161010c565b811461015257600080fd5b50565b610153806101646000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806376cdb03b1461003b5780638da5cb5b14610059575b600080fd5b610043610077565b60405161005091906100d0565b60405180910390f35b61006161009b565b60405161006e91906100d0565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ca816100eb565b82525050565b60006020820190506100e560008301846100c1565b92915050565b60006100f6826100fd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea2646970667358221220d33086754e792ef9a9a3453b88031e5c891bd9b7f00a56d985faccda83fdb3a764736f6c63430008010033a264697066735822122044d1371549d1f58e21cc71d24d951f0cc8144211454449f32069e6be303eb98264736f6c63430008010033";

export class AccountFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccountFactory> {
    return super.deploy(overrides || {}) as Promise<AccountFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccountFactory {
    return super.attach(address) as AccountFactory;
  }
  connect(signer: Signer): AccountFactory__factory {
    return super.connect(signer) as AccountFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountFactoryInterface {
    return new utils.Interface(_abi) as AccountFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountFactory {
    return new Contract(address, _abi, signerOrProvider) as AccountFactory;
  }
}
